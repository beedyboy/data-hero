{"version":3,"file":"index.es.js","sources":["../src/index.ts"],"sourcesContent":["\r\nclass DataHero {\r\n    payload: any = { \r\n    };\r\n    //check if rules exist or terminate \r\n            \r\n    validate(schema: any, data: object) {\r\n        if (schema && data) {\r\n        \r\n        Object.keys(schema).forEach(key => { \r\n           this.validator(key, schema[key], data);\r\n             \r\n        })\r\n        return this.payload; \r\n           \r\n        }\r\n    }\r\n\r\n    validator(key: any, shuffle: any,  data: any) {\r\n        let message: string = '';\r\n        let error:boolean = false;\r\n        const value = data[key];\r\n         for (let property in shuffle) {\r\n             switch(property) {\r\n                case \"min\":  \r\n                    if (value.length < shuffle[property]) { \r\n                        error = true;\r\n                        } \r\n                 break;\r\n\r\n                 case \"max\":  \r\n                    if (value.length > shuffle[property]){ \r\n                        error = true;\r\n                       } \r\n                 break;\r\n\r\n                 case \"email\":\r\n                    if(shuffle[property]) {\r\n                        var regexp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\r\n                        const find = regexp.test(value); \r\n                         if(!find) {\r\n                            error = true;\r\n                            // this.payload.message = \"Invalid email\";\r\n                         }\r\n                    }\r\n\r\n                 case \"message\": message = shuffle[property];\r\n\r\n                 break;\r\n             }\r\n             \r\n         }\r\n         \r\n             this.payload[key] = { \r\n                     error,\r\n                     message \r\n                 } \r\n        \r\n         return this.payload;\r\n    }\r\n\r\n    \r\n}\r\nlet dataHero = new DataHero();\r\nexport default dataHero;"],"names":[],"mappings":"AACA;IAAA;QACI,YAAO,GAAQ,EACd,CAAC;KA2DL;;IAxDG,2BAAQ,GAAR,UAAS,MAAW,EAAE,IAAY;QAAlC,iBAUC;QATG,IAAI,MAAM,IAAI,IAAI,EAAE;YAEpB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAA,GAAG;gBAC5B,KAAI,CAAC,SAAS,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;aAEzC,CAAC,CAAA;YACF,OAAO,IAAI,CAAC,OAAO,CAAC;SAEnB;KACJ;IAED,4BAAS,GAAT,UAAU,GAAQ,EAAE,OAAY,EAAG,IAAS;QACxC,IAAI,OAAO,GAAW,EAAE,CAAC;QACzB,IAAI,KAAK,GAAW,KAAK,CAAC;QAC1B,IAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;QACvB,KAAK,IAAI,QAAQ,IAAI,OAAO,EAAE;YAC1B,QAAO,QAAQ;gBACZ,KAAK,KAAK;oBACN,IAAI,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,EAAE;wBAClC,KAAK,GAAG,IAAI,CAAC;qBACZ;oBACR,MAAM;gBAEN,KAAK,KAAK;oBACP,IAAI,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,EAAC;wBACjC,KAAK,GAAG,IAAI,CAAC;qBACb;oBACP,MAAM;gBAEN,KAAK,OAAO;oBACT,IAAG,OAAO,CAAC,QAAQ,CAAC,EAAE;wBAClB,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,wJAAwJ,CAAC,CAAC;wBAClL,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBAC/B,IAAG,CAAC,IAAI,EAAE;4BACP,KAAK,GAAG,IAAI,CAAC;;yBAEf;qBACL;gBAEJ,KAAK,SAAS;oBAAE,OAAO,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;oBAE5C,MAAM;aACT;SAEJ;QAEG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG;YACZ,KAAK,OAAA;YACL,OAAO,SAAA;SACV,CAAA;QAET,OAAO,IAAI,CAAC,OAAO,CAAC;KACxB;IAGL,eAAC;AAAD,CAAC,IAAA;IACG,QAAQ,GAAG,IAAI,QAAQ;;;;"}